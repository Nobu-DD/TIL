### getsで取得した値に**to_i**を指定した場合 or **split**を指定した場合はchompを使用しない
標準入力の場合、末尾に改行コードが付与されてしまうため、基本chompを使用して取り除く必要があります。
しかし、整数化するために**to_i**を指定すると自然に改行コードは取り除かれます。(Numericに変換すると改行コードが取り除かれる)

同様にsplitを使用した場合も改行コードは無視される。
そのため実行時間の効率化を考えると、chompを使用しない選択をする必要がある。
```ruby
# 改善前
count = gets.chomp.to_i
array = gets.chomp.split
# 改善後
count = gets.to_i
array = gets.split
# どちらも改行は排除されている
```
### eachやifで配列内の値を比べる時はブロック変数に別名で定義する
2次元配列をeachで取り出し、要素内で比較するパターンがありました。
今回は数値が一致している要素がいくつあるか確認するという内容で書いていきます(変数名はかなり適当です)
```ruby
# 修正前
count = 0
# intに複数の配列代入済み[[2,5], [4,4], [1,3], [1,1]]

int.each do |i|
  if i[0] == i[1]
    count += 1
  end
end

puts count # => 2
```
この内容でも処理は実行されますが、如何せん関係性がわかりずらいです。
ブロック変数に役割を明示しておくと初めて見た場合でも理解しやすいと思いました。
```ruby
# 修正後
count = 0
# intに複数の配列代入済み[[2,5], [4,4], [1,3], [1,1]]

int.each do |left, right|
  if left == right
    count += 1
  end
end

puts count # => 2
```
